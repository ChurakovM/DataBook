server.port=${PORT:0}
spring.application.name=visitor-service

# Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.hostname=localhost
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# H2 db
spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:testdb
spring.data.jpa.repositories.bootstrap-mode=default
spring.jpa.open-in-view=false
spring.h2.console.settings.web-allow-others=true
spring.datasource.hikari.idle-timeout: 10000
spring.datasource.type=com.zaxxer.hikari.HikariDataSource

# MySQL DB settings
spring.datasource.url=jdbc:mysql://localhost:3306/testdb?serverTimezone=UTC
spring.datasource.username=mikhail
spring.datasource.password=mikhail
spring.jpa.hibernate.ddl-auto=update

# Log DB queries
logging.level.net.ttddyy.dsproxy.listener.logging.SLF4JQueryLoggingListener=debug
logging.level.com.example.visitorservice.controllers.VisitorController=debug

logging.level.com.example.visitorservice.clients.BooksServiceClient=DEBUG

## Hystrix Circuit Breaker
#feign.circuitbreaker.enabled=true

### Resilience4j settings

## Actuator settings

management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

## Circuit Breaker settings
# If 50 % of 2 calls fail then the curcuit breaker will become "Open".
# After 10 seconds the curcuit breaker will transition from "Open" state to "Half-Open" state.
# In order to start calculating the failure rate at least 1 call should be performed
# In the actuator we'll be able to see last 10 events

resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.books-service.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.books-service.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.books-service.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.books-service.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.books-service.sliding-window-size=2
resilience4j.circuitbreaker.instances.books-service.minimum-number-of-calls=1
resilience4j.circuitbreaker.instances.books-service.event-consumer-buffer-size=10

## Retry settings
# if something fails, we're going to retry 3 times
# Between retry attempts we'll have to wait 2 seconds. The time between retry attempts will go up exponentially up to the maximum back-off time

resilience4j.retry.retry-aspect-order=2
resilience4j.retry.instances.books-service.max-attempts=3
resilience4j.retry.instances.books-service.wait-duration=2s
resilience4j.retry.instances.books-service.enable-exponential-backoff=true
resilience4j.retry.instances.books-service.exponential-backoff-multiplier=5